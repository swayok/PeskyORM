<?php

namespace App\Db;

use PeskyORM\ORM\TableStructure;
use PeskyORM\ORM\Column;
use PeskyORM\ORM\Relation;
use PeskyORM\DbExpr;

/**
 * @property-read Column    $id
 * @property-read Column    $login
 * @property-read Column    $password
 * @property-read Column    $parent_id
 * @property-read Column    $created_at
 * @property-read Column    $updated_at
 * @property-read Column    $remember_token
 * @property-read Column    $is_superadmin
 * @property-read Column    $language
 * @property-read Column    $ip
 * @property-read Column    $role
 * @property-read Column    $is_active
 * @property-read Column    $name
 * @property-read Column    $email
 * @property-read Column    $timezone
 * @property-read Column    $not_changeable_column
 * @property-read Column    $big_data
 */
class AdminsTableStructure extends TableStructure
{

    public static function getTableName(): string
    {
        return 'admins';
    }

    private function id(): Column
    {
        return Column::create(Column::TYPE_INT)
            ->primaryKey()
            ->disallowsNullValues()
            ->convertsEmptyStringToNull();
    }

    private function login(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->uniqueValues()
            ->disallowsNullValues()
            ->convertsEmptyStringToNull();
    }

    private function password(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull();
    }

    private function parent_id(): Column
    {
        return Column::create(Column::TYPE_INT);
    }

    private function created_at(): Column
    {
        return Column::create(Column::TYPE_TIMESTAMP_WITH_TZ)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull()
            ->setDefaultValue(DbExpr::create('now()'));
    }

    private function updated_at(): Column
    {
        return Column::create(Column::TYPE_TIMESTAMP_WITH_TZ)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull()
            ->setDefaultValue(DbExpr::create('now()'));
    }

    private function remember_token(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->setDefaultValue('');
    }

    private function is_superadmin(): Column
    {
        return Column::create(Column::TYPE_BOOL)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull()
            ->setDefaultValue(false);
    }

    private function language(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->setDefaultValue('en');
    }

    private function ip(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->setDefaultValue('192.168.1.1');
    }

    private function role(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull()
            ->setDefaultValue('');
    }

    private function is_active(): Column
    {
        return Column::create(Column::TYPE_BOOL)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull()
            ->setDefaultValue(true);
    }

    private function name(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull()
            ->setDefaultValue('');
    }

    private function email(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->uniqueValues();
    }

    private function timezone(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull()
            ->setDefaultValue('UTC');
    }

    private function not_changeable_column(): Column
    {
        return Column::create(Column::TYPE_STRING)
            ->setDefaultValue('not changable');
    }

    private function big_data(): Column
    {
        return Column::create(Column::TYPE_TEXT)
            ->disallowsNullValues()
            ->convertsEmptyStringToNull()
            ->setDefaultValue('biiiiiiig data');
    }

}